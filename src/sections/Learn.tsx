'use client'

import { useState } from 'react';
import AnimatedSection from '@/components/AnimatedSection';

interface Module {
  id: number;
  title: string;
  content: string[];
}

function Learn() {
  const [openModule, setOpenModule] = useState<number>(1);

  const modules: Module[] = [
    {
      id: 1,
      title: 'Модуль 1: Введение в системный анализ',
      content: [
        'Знакомство с курсом: цели, структура и ожидаемые результаты',
        'Роль системного аналитика в IT-проектах: кто такой системный аналитик и почему его вклад важен для успешной реализации проектов',
        'Основные задачи и обязанности: от сбора требований до контроля их реализации',
        'Что такое ФТ и НФТ?',
        'Процесс сбора и анализа требований: методы, подходы и инструменты',
        'Этапы работы системного аналитика: от начального анализа до сопровождения решений',
        'Практика: оформление задач и создание шаблонов бизнес-документов. Написание UseCase cценариев'
      ]
    },
    {
      id: 2,
      title: 'Модуль 2: Моделирование с помощью UML',
      content: [
        'Основы UML',
        'Диаграмма активности',
        'Диаграмма последовательность (Sequance)',
        'Диаграмма компонентов',
        'PluntUML + ChatGPT',
        'Практика: Нарисовать Sequance-диаграмму с помощью draw.io и с помощью ChatGPT написать правильный prompt'
      ]
    },
    {
      id: 3,
      title: 'Модуль 3: Архитектура программных систем',
      content: [
        'Основы архитектуры: ключевые принципы построения программных систем',
        'Различие между монолитной архитектурой и микросервисной',
        'Что такое API Gateway? Для чего он нужен?',
        'Разбор синхронных и асинхронных взаимодействий: особенности и применение',
        'Четыре уровня представления архитектуры (C4-модель): контекст, контейнеры, компоненты и код',
        'Практика: проектирование микросервисной архитектуры на примере интернет-магазина'
      ]
    },
    {
      id: 4,
      title: 'Модуль 4: Проектирование баз данных',
      content: [
        'Введение в реляционные базы данных: их структура и принципы работы',
        'Нереляционные Базы данных (NoSQL). Документоориентированные (например, MongoDB)',
        'Нормализация данных: как создавать эффективные и непротиворечивые структуры',
        'Создание ER-диаграмм: визуализация и моделирование сущностей и их взаимосвязей',
        'Что такое ACID (транзакционность)?',
        'Практика: проектирование базы данных для интернет-магазина в виде ER-диаграммы'
      ]
    },
    {
      id: 5,
      title: 'Модуль 5: Проектирование API',
      content: [
        'Основы API: принципы REST, gRPC и SOAP, их отличие и применение',
        'Создание спецификаций API: как точно и корректно описать интерфейсы',
        'Взаимодействие с фронтендом и бэкендом: работа системного аналитика в интеграции компонентов',
        'Использование Postman для тестирования разработанного API',
        'Аутентификация и авторизации (OAuth 2.0 и OpenConnect). JWT (JSON Web Token)',
        'Как правильно проектировать JSON с нуля',
        'Практика: разработка требований и спецификаций API для онлайн-магазина. Покажем готовые боевые API в Postman'
      ]
    },
    {
      id: 6,
      title: 'Модуль 6: Введение в SQL',
      content: [
        'Что такое SQL?',
        'Типы данных',
        'Чтение данных из таблиц (SELECT)',
        'DDL и DML',
        'Группировка данных (GROUP BY) и агрегатные функции',
        'Индексы и оптимизация запросов',
        'Работа с несколькими таблицами (JOIN)',
        'Подзапросы',
        'Оконные функции',
        'Практика: Составления SQL-запросов к базе данных интернет-магазина'
      ]
    },
    {
      id: 7,
      title: 'Модуль 7: Брокеры сообщений (Kafka/RabbitMQ)',
      content: [
        'Введение в брокеры сообщений: что это такое и зачем они нужны',
        'Применение брокеров в системной архитектуре: преимущества и примеры использования',
        'Практика: используем микросервис и kafka для обработки статуса заказа в онлайн магазине'
      ]
    },
    {
      id: 8,
      title: 'Модуль 8: Кэширование (Redis)',
      content: [
        'Кэширование на фронтенде (LocalStorage)',
        'Кэширование на бэкенде (redis)',
        'Практика: Реализация простого кэширования на фронтенде с использованием LocalStorage. Настройка кэширования на бэкенде с использованием Redis'
      ]
    },
    {
      id: 9,
      title: 'Модуль 9: Введение в Git',
      content: [
        'Введение в Git',
        'Основы работы с репозиториями',
        'Основные команды Git',
        'Разрешение конфликтов',
        'Практика: Работа с помощью Git с репозиторией бэкенда онлайн-магазина'
      ]
    },
    {
      id: 10,
      title: 'Модуль 10: Софт-скиллы и воркшопы от экспертов',
      content: [
        'Разбор кейсов и ситуационных задач: обучение на реальных примерах и обратная связь от спикеров',
        'Подготовка к собеседованию: как выделиться среди других кандидатов и показать свою ценность',
        'Нетривиальные вопросы на собеседованиях',
        'Бонус: вебинар с приглашенным HR'
      ]
    }
  ];

  return (
    <section className="py-16 bg-[var(--bg-section)] text-white rounded-t-3xl">
      <div className="container">
        <AnimatedSection>
          <h2 className="text-3xl font-semibold mb-8">Программа курса</h2>
        </AnimatedSection>
        
        <div className="space-y-2 md:space-y-4">
          {modules.map((module, index) => (
            <AnimatedSection 
              key={module.id} 
              delay={index * 0.1}
              direction="up"
            >
              <div className="bg-white text-black rounded-2xl overflow-hidden">
                <button
                  className="w-full px-6 py-6 gap-4 text-left flex items-start justify-between hover:bg-opacity-90 relative z-10"
                  onClick={() => setOpenModule(openModule === module.id ? 0 : module.id)}
                >
                  <span className="text-sm md:text-lg font-semibold">{module.title}</span>
                  <svg
                    className={`w-8 h-8 transform transition-transform ${
                      openModule === module.id ? 'rotate-180' : ''
                    }`}
                    fill="none"
                    stroke="#7497C4"
                    viewBox="0 0 24 24"
                  >
                    <path
                      strokeLinecap="round"
                      strokeLinejoin="round"
                      strokeWidth={2}
                      d="M19 9l-7 7-7-7"
                    />
                  </svg>
                </button>
              </div>
              <div>
              {openModule === module.id && (
                  <div className="px-8 py-4 bg-[#18529D] mt-2">
                    <ul className="list-disc list-inside text-[var(--white)]">
                      {module.content.map((item, index) => (
                        <li key={index} className="leading-relaxed font-semibold">
                          {item}
                        </li>
                      ))}
                    </ul>
                  </div>
                )}
              </div>
            </AnimatedSection>
          ))}
        </div>
      </div>
    </section>
  );
}

export default Learn;
